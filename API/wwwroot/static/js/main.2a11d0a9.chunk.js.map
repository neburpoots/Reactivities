{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListitem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashBoard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/homePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","profile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","negative","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","marginBotton","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","length","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabeChange","activeindex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","menuPosition","onTabChange","activeIndex","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashBoard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.2a11d0a9.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> \r\n{\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams\r\n{\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n    async (response) => {\r\n        if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n\r\n        const pagination = response.headers[\"pagination\"];\r\n\r\n        if (pagination) {\r\n            response.data = new PaginatedResult(\r\n                response.data,\r\n                JSON.parse(pagination)\r\n            );\r\n            return response as AxiosResponse<PaginatedResult<any>>;\r\n        }\r\n\r\n        return response;\r\n    },\r\n    (error: AxiosError) => {\r\n        const { data, status, config } = error.response!;\r\n        switch (status) {\r\n            case 400:\r\n                if (\r\n                    config.method === \"get\" &&\r\n                    data.errors.hasOwnProperty(\"id\")\r\n                ) {\r\n                    history.push(\"/not-found\");\r\n                }\r\n                if (data.errors) {\r\n                    const modalStateErrors = [];\r\n                    for (const key in data.errors) {\r\n                        if (data.errors[key]) {\r\n                            modalStateErrors.push(data.errors[key]);\r\n                        }\r\n                    }\r\n                    throw modalStateErrors.flat();\r\n                } else {\r\n                    toast.error(data);\r\n                }\r\n                break;\r\n            case 401:\r\n                toast.error(\"unauthorised\");\r\n                break;\r\n            case 404:\r\n                history.push(\"/not-found\");\r\n                break;\r\n            case 500:\r\n                store.commonStore.setServerError(data);\r\n                history.push(\"/server-error\");\r\n                break;\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) =>\r\n        axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) =>\r\n        axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) =>\r\n        axios\r\n            .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n            .then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) =>\r\n        requests.post<void>(\"/activities\", activity),\r\n    update: (activity: ActivityFormValues) =>\r\n        requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>(\"/account\"),\r\n    login: (user: UserFormValues) =>\r\n        requests.post<User>(\"/account/login\", user),\r\n    register: (user: UserFormValues) =>\r\n        requests.post<User>(\"/account/register\", user),\r\n    fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n};\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append(\"File\", file);\r\n        return axios.post<Photo>(\"photos\", formData, {\r\n            headers: { \"Content-type\": \"multipart/form-data\" },\r\n        });\r\n    },\r\n    updateFollowing: (username: string) =>\r\n        requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) =>\r\n        requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>\r\n        requests.get<UserActivity[]>(\r\n            `/profiles/${username}/activities?predicate=${predicate}`\r\n        ),\r\n};\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n        if(activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.venue = activity.venue;\r\n            this.city = activity.city;\r\n        }\r\n    }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case \"all\":\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n                break;\r\n        }\r\n    }\r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if(key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n            a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n\r\n            result.data.forEach(activity => {\r\n                this.setActivity(activity);\r\n            })\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if(user) {\r\n            activity.isGoing = activity.attendees!.some(\r\n                a => a.username === user.username\r\n            )\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n        }\r\n        activity.date = new Date(activity.date!)\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if(activity.id) {\r\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity}\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                }   \r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if(this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees = this.selectedActivity.attendees\r\n                    ?.filter(a => a.username !== user?.username);\r\n                    this.selectedActivity.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch(error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if(attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    userActivities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.activeTab,\r\n            (activeTab) => {\r\n                if (activeTab === 3 || activeTab === 4) {\r\n                    const predicate =\r\n                        activeTab === 3 ? \"followers\" : \"following\";\r\n                    this.loadFollowings(predicate);\r\n                } else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    };\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile?.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => (this.loadingProfile = false));\r\n        }\r\n    };\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n                this.uploading = false;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => (this.uploading = false));\r\n        }\r\n    };\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n\r\n            runInAction(() => {\r\n                if (\r\n                    this.profile &&\r\n                    this.profile.username !== store.userStore.user?.username &&\r\n                    this.profile.username === username\r\n                ) {\r\n                    following\r\n                        ? this.profile.followersCount++\r\n                        : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n                if (\r\n                    this.profile &&\r\n                    this.profile.username === store.userStore.user?.username\r\n                ) {\r\n                    following\r\n                        ? this.profile.followingCount++\r\n                        : this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach((profile) => {\r\n                    if (profile.username === username) {\r\n                        profile.following\r\n                            ? profile.followersCount--\r\n                            : profile.followersCount++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                });\r\n                this.loading = false;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n            runInAction(() => (this.loading = false));\r\n        }\r\n    };\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(\r\n                this.profile!.username,\r\n                predicate\r\n            );\r\n\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => (this.loadingFollowings = false));\r\n        }\r\n    };\r\n\r\n    loadUserActivities = async (username: string, predicate?: string) => {\r\n        this.loadingActivities = true;\r\n\r\n        try {\r\n            const activities = await agent.Profiles.listActivities(username, predicate!);\r\n            runInAction(() => {\r\n                this.userActivities = activities;\r\n                this.loadingActivities = false\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingActivities = false;\r\n            })\r\n        }\r\n    }\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => (this.user = user));\r\n            history.push(\"/activities\");\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem(\"jwt\");\r\n        this.user = null;\r\n        history.push(\"/\");\r\n    };\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => (this.user = user));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => (this.user = user));\r\n            history.push(\"/activities\");\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    setImage = (image: string) => {\r\n        if (this.user) this.user.image = image;\r\n    };\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus((response) => {\r\n            if (response.status === \"connected\") {\r\n                this.fbAccessToken = response.authResponse.accessToken;\r\n                this.fbLoading = false;\r\n            }\r\n        });\r\n    };\r\n\r\n    facebookLogin = () => {\r\n        this.fbLoading = true;\r\n        const apiLogin = async (accessToken: string) => {\r\n            agent.Account.fbLogin(accessToken)\r\n                .then((user) => {\r\n                    store.commonStore.setToken(user.token);\r\n                    runInAction(() => {\r\n                        this.user = user;\r\n                        this.fbLoading = false;\r\n                    });\r\n                    history.push(\"/activities\");\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    runInAction(() => (this.fbLoading = false));\r\n                });\r\n        };\r\n        if (this.fbAccessToken) {\r\n            apiLogin(this.fbAccessToken);\r\n        } else {\r\n            window.FB.login(\r\n                (response) => {\r\n                    apiLogin(response.authResponse.accessToken);\r\n                },\r\n                { scope: \"public_profile,email\" }\r\n            );\r\n        }\r\n    };\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if(token) {\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n    \r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, LogLevel } from \"@microsoft/signalr\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr/dist/esm/HubConnectionBuilder\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing the connection: \", error)\r\n        );\r\n\r\n        this.hubConnection.on('LoadComments', (comments : ChatComment[]) => {\r\n            runInAction(() => {\r\n                comments.forEach(comment => {\r\n                    comment.createdAt = new Date(comment.createdAt + 'Z')\r\n                })\r\n                this.comments = comments;\r\n            })\r\n        })\r\n\r\n        this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n            runInAction(() => {\r\n                comment.createdAt = new Date(comment.createdAt);\r\n                this.comments.unshift(comment)\r\n\r\n            });\r\n        })\r\n    }\r\n  }\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error))\r\n  }\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  }\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n        await this.hubConnection?.invoke('SendComment', values);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n  }\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar() {\r\n    const {userStore: {user, logout}} = useStore();\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} exact to='/' header>\r\n                    <img src='/assets/logo.png' alt='logo' style={{ marginRight: '10px' }} />\r\n                    Reactivities\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name='Activities' />\r\n                <Menu.Item as={NavLink} to='/errors' name='Errors' />\r\n                <Menu.Item>\r\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity' />\r\n                </Menu.Item>\r\n                <Menu.Item position='right'>\r\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right'/>\r\n                    <Dropdown pointing='top right' text={user?.displayName}>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} \r\n                            text='My Profile' icon='user'/>\r\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power'/>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n    const {\r\n        activityStore: { predicate, setPredicate },\r\n    } = useStore();\r\n    return (\r\n        <>\r\n            <Menu\r\n                vertical\r\n                size=\"large\"\r\n                style={{ width: \"100%\", marginTop: 25 }}\r\n            >\r\n                <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n                <Menu.Item\r\n                    content=\"All Activities\"\r\n                    active={predicate.has(\"all\")}\r\n                    onClick={() => setPredicate(\"all\", \"true\")}\r\n                />\r\n                <Menu.Item\r\n                    content=\"I'm going\"\r\n                    active={predicate.has(\"isGoing\")}\r\n                    onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n                />\r\n                <Menu.Item\r\n                    content=\"I'm hosting\"\r\n                    active={predicate.has(\"isHost\")}\r\n                    onClick={() => setPredicate(\"isHost\", \"true\")}\r\n                />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar \r\n                onChange={(date : Date) => setPredicate('startDate', date)}\r\n                value={predicate.get('startDate') || new Date()}\r\n            />\r\n        </>\r\n    );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following': 'Not following'} />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Folllow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>Bio goes here</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({attendees}: Props) {\r\n\r\n    const styles = {\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee => (\r\n                <Popup\r\n                    hoverable\r\n                    key={attendee.username}\r\n                    trigger={\r\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                            <Image \r\n                                size='mini' \r\n                                circular src={attendee.image || '/assets/user.png'}\r\n                                bordered\r\n                                style={attendee.following ? styles : null}    \r\n                            />\r\n                        </List.Item>\r\n                    }\r\n                >\r\n                    <Popup.Content>\r\n                       <ProfileCard profile={attendee} />\r\n                    </Popup.Content>\r\n                </Popup>\r\n\r\n            ))}\r\n        </List>\r\n    )\r\n})","import { format } from 'date-fns';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({activity}: Props) {\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                {activity.isCancelled &&\r\n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />\r\n                }\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image style={{marginBottom: 3}} size='tiny' circular src={activity.host?.image || '/assets/user.png'} />\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                                {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></Item.Description>\r\n                            {activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='orange'>\r\n                                        You are hosting this activity\r\n                                    </Label>    \r\n                                </Item.Description>\r\n                            )}\r\n                            {activity.isGoing && !activity.isHost &&  (\r\n                                <Item.Description>\r\n                                    <Label basic color='green'>\r\n                                        You are going to this activity\r\n                                    </Label>    \r\n                                </Item.Description>\r\n                            )}\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                    <Icon name='marker'/> {activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={activity.attendees!} />\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button\r\n                    as={Link}\r\n                    to={`/activities/${activity.id}`}\r\n                    color='teal'\r\n                    floated='right'\r\n                    content='View'\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListitem';\r\n\r\nexport default observer(function ActivityList() {\r\n    const {activityStore} = useStore();\r\n    const {groupedActivities} = activityStore;\r\n\r\n    return (\r\n        <>\r\n        {groupedActivities.map(([group, activities]) => (\r\n            <Fragment key={group}>\r\n                <Header sub color='teal'>\r\n                    {group}\r\n                </Header>\r\n                {activities.map(activity => (\r\n                    <ActivityListItem key={activity.id} activity={activity} />\r\n                ))}\r\n\r\n            </Fragment>\r\n        ))}\r\n        </>\r\n\r\n    )\r\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n    const { activityStore } = useStore();\r\n    const { loadActivities, activityRegistry, setPagingParams, pagination } =\r\n        activityStore;\r\n\r\n    const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n    function handleGetNext() {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n        loadActivities().then(() => setLoadingNext(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activityRegistry.size <= 0) loadActivities();\r\n    }, [activityRegistry.size, loadActivities]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width=\"10\">\r\n                {activityStore.loadingInitial && !loadingNext ? (\r\n                    <>\r\n                        <ActivityListItemPlaceholder />\r\n                        <ActivityListItemPlaceholder />\r\n                    </>\r\n                ) : (\r\n                    <InfiniteScroll\r\n                        pageStart={0}\r\n                        loadMore={handleGetNext}\r\n                        hasMore={\r\n                            !loadingNext &&\r\n                            !!pagination &&\r\n                            pagination.currentPage < pagination.totalPages\r\n                        }\r\n                        initialLoad={false}\r\n                    >\r\n                        <ActivityList />\r\n                    </InfiniteScroll>\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width=\"6\">\r\n                <ActivityFilters />\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <Loader active={loadingNext} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n});\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ): null }\r\n        </Form.Field>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n    const {userStore, modalStore} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => \r\n                setErrors({error: 'Invalid email or password'}))}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors}) => (\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage\r\n                        name='error' render={() => \r\n                        <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                    <Button onClick={modalStore.closeModal} negative content='Cancel' fluid />\r\n                </Form>\r\n            )}\r\n            \r\n        </Formik>\r\n    )\r\n})","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({errors}: Props) {\r\n    return (\r\n        <Message error>\r\n             {errors && (\r\n                 <Message.List>\r\n                     {errors.map((err: any, i: any) => (\r\n                         <Message.Item key={i}>{err}</Message.Item>\r\n                     ))}\r\n                 </Message.List>\r\n             )}\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName: '', username: '', email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => \r\n                setErrors({error}))}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivites' color='teal' textAlign='center' />\r\n                    <MyTextInput name='displayName' placeholder='Display Name' />\r\n                    <MyTextInput name='username' placeholder='Username' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage \r\n                        name='error' render={() => \r\n                        <ValidationErrors errors={errors.error}/>}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} \r\n                        loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Container,\r\n    Header,\r\n    Segment,\r\n    Image,\r\n    Button,\r\n    Divider,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n    const { userStore, modalStore } = useStore();\r\n\r\n    return (\r\n        <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n            <Container text>\r\n                <Header as=\"h1\" inverted>\r\n                    <Image\r\n                        size=\"massive\"\r\n                        src=\"/assets/logo.png\"\r\n                        alt=\"logo\"\r\n                        style={{ marginBotton: 12 }}\r\n                    />\r\n                    Reactivities\r\n                </Header>\r\n                {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header\r\n                            as=\"h2\"\r\n                            inverted\r\n                            content=\"Welcome to Reactivities\"\r\n                        />\r\n                        <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n                            Go to Activities!\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Button\r\n                            onClick={() => modalStore.openModal(<LoginForm />)}\r\n                            size=\"huge\"\r\n                            inverted\r\n                        >\r\n                            Login!\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() =>\r\n                                modalStore.openModal(<RegisterForm />)\r\n                            }\r\n                            size=\"huge\"\r\n                            inverted\r\n                        >\r\n                            Register!\r\n                        </Button>\r\n                        <Divider horizontal inverted>\r\n                            Or\r\n                        </Divider>\r\n                        <Button\r\n                            as={Link}\r\n                            inverted\r\n                            loading={userStore.fbLoading}\r\n                            color=\"facebook\"\r\n                            content='Login with Facebook'\r\n                            onClick={userStore.facebookLogin}\r\n                        />\r\n                    </>\r\n                )}\r\n            </Container>\r\n        </Segment>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ): null }\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n    const [field, meta, helpers] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select\r\n                clearable\r\n                options={props.options}\r\n                value={field.value || null}\r\n                onChange={(e, d) => helpers.setValue(d.value)}\r\n                onBlur={() => helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ): null }\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions = [\r\n    {text: 'Drinks', value: 'drinks'},\r\n    {text: 'Culture', value: 'culture'},\r\n    {text: 'Film', value: 'film'},\r\n    {text: 'Food', value: 'food'},\r\n    {text: 'Music', value: 'music'},\r\n    {text: 'Travel', value: 'travel'},\r\n]","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker \r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ): null }\r\n        </Form.Field>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\n\r\nexport default observer(function ActivityForm() {\r\n    const history = useHistory();\r\n    const {activityStore} = useStore();\r\n    const {createActivity, updateActivity, \r\n             loadActivity, loadingInitial} = activityStore;\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity description is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        venue: Yup.string().required(),\r\n        city: Yup.string().required(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\r\n    }, [id, loadActivity]);\r\n\r\n    function handleFormSubmit(activity: ActivityFormValues) {\r\n        if (!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            };\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\r\n        } else {\r\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\r\n        }\r\n    }\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading activity...' />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color='teal'/>\r\n            <Formik \r\n            validationSchema={validationSchema}\r\n            enableReinitialize \r\n            initialValues={activity} \r\n            onSubmit={values => handleFormSubmit(values)}>\r\n                {({handleSubmit, isValid, isSubmitting, dirty}) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput name='title' placeholder='Title' />\r\n                        <MyTextArea rows={3} placeholder='Description' name='description' />\r\n                        <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\r\n                        <MyDateInput \r\n                            placeholderText='Date' \r\n                            name='date'\r\n                            showTimeSelect\r\n                            timeCaption='time'\r\n                            dateFormat='MMMM d, yyyy h:mm aa'\r\n                        />\r\n                        <Header content='Location Details' sub color='teal'/>\r\n                        <MyTextInput placeholder='City' name='city' />\r\n                        <MyTextInput placeholder='Venue' name='venue' />\r\n                        <Button \r\n                        disabled={isSubmitting || !dirty || !isValid}\r\n                        loading={isSubmitting} \r\n                        floated='right' positive type='submit' content='Submit' />\r\n                        <Button as={Link} to='/activities' floated='right' type='button' content='Cancel' />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n        </Segment>\r\n    )\r\n})","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\r\n    const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                {activity.isCancelled &&\r\n                    <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}} \r\n                    ribbon color='red' content='Cancelled'/>\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost ? (\r\n                    <>\r\n                        <Button\r\n                            color={activity.isCancelled ? 'green' : 'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={activity.isCancelled ? 'Re-activiate Activity' : 'Cancel Activity'}\r\n                            onClick={cancelActivityToggle}\r\n                            loading={loading}\r\n                        />\r\n                        <Button as={Link} \r\n                            disabled={activity.isCancelled}\r\n                            to={`/manage/${activity.id}`} \r\n                            color='orange' \r\n                            floated='right'>\r\n                            Manage Event\r\n                        </Button>\r\n                    </>\r\n                ) : activity.isGoing ? (\r\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\r\n                ) : (\r\n                    <Button \r\n                        disabled={activity.isCancelled}\r\n                        loading={loading} \r\n                        onClick={updateAttendance} \r\n                        color='teal'>\r\n                        Join Activity\r\n                    </Button>\r\n                )}\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","\r\nimport { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <span>\r\n                        {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                        </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid  } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\nexport default observer( function ActivityDetails() {\r\n    \r\n    const {activityStore} = useStore();\r\n    const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id);\r\n        return () => clearSelectedActivity();\r\n\r\n    }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n    if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <ActivityDetailedHeader activity={activity} />\r\n                <ActivityDetailedInfo activity={activity} />\r\n                <ActivityDetailedChat activityId={activity.id} />\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <ActivityDetailedSidebar activity={activity!} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationErrors errors={errors} />\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer( function ServerError() {\r\n    const {commonStore} = useStore();\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error' />\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n            {commonStore.error?.details&&\r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal' />\r\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n    const {modalStore} = useStore();\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})\r\n\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Card,\r\n    Grid,\r\n    Header,\r\n    Tab,\r\n    TabProps,\r\n    Image,\r\n} from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n    { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n    { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n    { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const { profileStore } = useStore();\r\n\r\n    const { loadUserActivities, profile, loadingActivities, userActivities } =\r\n        profileStore;\r\n\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile]);\r\n\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserActivities(\r\n            profile!.username,\r\n            panes[data.activeindex as number].pane.key\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header\r\n                        floated=\"left\"\r\n                        icon=\"calender\"\r\n                        content={\"Activities\"}\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{ secondary: true, pointing: true }}\r\n                        onTabeChange={(e: SyntheticEvent, data: TabProps) =>\r\n                            handleTabChange(e, data)\r\n                        }\r\n                    />\r\n                    <br />\r\n                </Grid.Column>\r\n                <Card.Group itemsPerRow={4}>\r\n                    {userActivities.map((activity: UserActivity) => (\r\n                        <Card\r\n                            as={Link}\r\n                            to={`/activities/${activity.id}`}\r\n                            key={activity.id}\r\n                        >\r\n                            <Image\r\n                                src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                            />\r\n                            <Card.Content>\r\n                                <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                                <Card.Meta textAlign='center'>\r\n                                <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                <div>{format(new Date(activity.date), 'h: mm a')}</div>\r\n                                </Card.Meta>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    ))}\r\n                </Card.Group>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const { profileStore } = useStore();\r\n\r\n    const { profile, followings, loadingFollowings, activeTab } =\r\n        profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header\r\n                        floated=\"left\"\r\n                        icon=\"user\"\r\n                        content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`}\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group>\r\n                        {followings.map((profile) => (\r\n                            <ProfileCard\r\n                                key={profile.username}\r\n                                profile={profile}\r\n                            />\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n    return (\r\n        <Cropper \r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n            \r\n    )\r\n}","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5ps',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n            setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })))\r\n    }, [setFiles])\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n    return (\r\n        <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n        <input {...getInputProps()} />\r\n            <Icon name='upload' size='huge' />\r\n            <Header content='Drop image here' />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop() {\r\n        if(cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content='STEP 1 - ADD PHOTO' />\r\n                <PhotoWidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content='STEP 2 - RESIZE IMAGE' />\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content='STEP 3 - PREVIEW & UPLOAD' />\r\n                {files && files.length > 0 &&\r\n                \r\n                <>\r\n                    <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}} />\r\n                    <Button.Group widths={2}>\r\n                        <Button loading={loading} onClick={onCrop} positive icon='check' />\r\n                        <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\r\n                    </Button.Group>\r\n                </>\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, { useState } from 'react';\r\nimport { Card, Header, Tab, Image, Grid, Button } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer( function ProfilePhotos({profile}: Props) {\r\n    const {profileStore: {isCurrentUser, uploadPhoto, uploading}} = useStore();\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n\r\n    function handlePhotoUpload(file: Blob) {\r\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n\r\n    }\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos' />\r\n                    {isCurrentUser && (\r\n                        <Button floated='right' basic \r\n                            content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n                            onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode ? (\r\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n                    ) : (\r\n                        <Card.Group itemsPerRow={5}>\r\n                            {profile.photos?.map(photo => (\r\n                                <Card key={photo.id} >\r\n                                    <Image src={photo.url} />\r\n                                </Card>\r\n                            ))}\r\n                        </Card.Group>\r\n                    )}\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer( function ProfileContent({profile}: Props) {\r\n\r\n    const {profileStore} = useStore();\r\n\r\n    const panes = [\r\n        {menuItem: 'About', render: () => <Tab.Pane>About Content</Tab.Pane>},\r\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\r\n        {menuItem: 'Events', render: () => <ProfileActivities />},\r\n        {menuItem: 'Followers', render: () => <ProfileFollowings />},\r\n        {menuItem: 'Following', render: () => <ProfileFollowings />}\r\n    ];\r\n\r\n    return (\r\n        <Tab\r\n            menu={{fluid: true, vertical: true}}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n    )\r\n\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\nexport default observer(function ProfileHeader({profile}: Props) {\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width ={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'}/>\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName} />\r\n                                \r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount} />\r\n                        <Statistic label='Following' value={profile.followingCount} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowButton profile={profile} />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage() {\r\n    const {username} = useParams<{username: string}>();\r\n    const {profileStore} = useStore();\r\n    const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\r\n\r\n    useEffect(() => {\r\n       loadProfile(username);\r\n       return () => {\r\n        setActiveTab(0);\r\n       }\r\n    }, [loadProfile, username, setActiveTab])\r\n\r\n    if(loadingProfile) return <LoadingComponent content='Loading profile...' />\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile && \r\n                <>\r\n                    <ProfileHeader  profile={profile} />\r\n                    <ProfileContent  profile={profile} />\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}","import React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashBoard from '../../features/activities/dashboard/ActivityDashBoard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/homePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport { useEffect } from 'react';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if(commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n  if(!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n  \n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashBoard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}